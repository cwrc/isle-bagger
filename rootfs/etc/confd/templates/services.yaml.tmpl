# Adapted from: https://github.com/mjordan/islandora_bagger/blob/1b4973023d0ace40633c79340077980b3be7c947/config/services.yaml
# Managed by: confd

# You may need to set the first two application parameters, but you will want to change
# app.bag.download.prefix.

parameters:
    app.queue.path: '{{ getenv "BAGGER_QUEUE_PATH" }}'
    app.location.log.path: '{{ getenv "BAGGER_LOCATION_LOG_PATH" }}'
    # The hostname/path to where users can download serialized bags. This string
    # will be appended to the Bag's filename.
    app.bag.download.prefix: '{{ getenv "BAGGER_BAG_DOWNLOAD_PREFIX" }}'

    # These options are usually defined in the per-Bag config file.
    # See README regarding placement of configuration in `config/service.yaml` and precedence. 
    app.drupal_base_url: '{{ getenv "BAGGER_DRUPAL_URL" }}'
    app.drupal_basic_auth: ['{{ getenv "BAGGER_DRUPAL_DEFAULT_ACCOUNT_NAME" }}', '{{ getenv "BAGGER_DRUPAL_DEFAULT_ACCOUNT_PASSWORD" }}']
    app.temp_dir: '{{ getenv "BAGGER_TEMP_DIR" }}'
    app.output_dir: '{{ getenv "BAGGER_OUTPUT_DIR" }}'

# You should not modify anything below this line.

services:
    # Default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # Makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'
